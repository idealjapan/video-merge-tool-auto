name: Process Disapproved Ads

on:
  # ÊâãÂãïÂÆüË°å
  workflow_dispatch:
  
  # ÂÆöÊúüÂÆüË°åÔºà2ÊôÇÈñì„Åî„Å®Ôºâ
  schedule:
    - cron: '0 */2 * * *'  # UTCÊôÇÈñì„Åß2ÊôÇÈñì„Åî„Å®ÔºàÊó•Êú¨ÊôÇÈñì„Åß„ÅØ+9ÊôÇÈñìÔºâ

jobs:
  process:
    runs-on: ubuntu-latest
    timeout-minutes: 30  # ÂÖ®‰Ωì„ÅÆ„Çø„Ç§„É†„Ç¢„Ç¶„ÉàÔºàÈÄöÂ∏∏3ÂàÜ„ÅßÂÆå‰∫ÜÔºâ
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
          # ffmpeg„ÅÆ„Ç§„É≥„Çπ„Éà„Éº„É´
          sudo apt-get update
          sudo apt-get install -y ffmpeg
      
      - name: Create credentials directory
        run: mkdir -p credentials
      
      - name: Setup Google Service Account
        run: |
          echo '${{ secrets.GOOGLE_SERVICE_ACCOUNT_JSON }}' > credentials/google_service_account.json
      
      - name: Setup YouTube tokens
        run: |
          echo "${{ secrets.TOKEN_NB_PICKLE }}" | base64 -d > credentials/token_NB.pickle
          echo "${{ secrets.TOKEN_OM_PICKLE }}" | base64 -d > credentials/token_OM.pickle
          echo "${{ secrets.TOKEN_SBC_PICKLE }}" | base64 -d > credentials/token_SBC.pickle
      
      - name: Setup client secrets
        run: |
          echo '${{ secrets.CLIENT_SECRETS_JSON }}' > credentials/client_secrets.json
      
      - name: Validate JSON files
        run: |
          echo "Validating google_service_account.json..."
          python3 -c "import json; json.load(open('credentials/google_service_account.json'))" && echo "‚úÖ Valid JSON" || echo "‚ùå Invalid JSON"
          echo "Validating client_secrets.json..."
          python3 -c "import json; json.load(open('credentials/client_secrets.json'))" && echo "‚úÖ Valid JSON" || echo "‚ùå Invalid JSON"
      
      - name: Create output directories
        run: |
          mkdir -p ad-videos
          mkdir -p outputs
          mkdir -p logs
      
      - name: Process disapproved ads
        timeout-minutes: 15  # ÂÄãÂà•„Çπ„ÉÜ„ÉÉ„Éó„ÅÆ„Çø„Ç§„É†„Ç¢„Ç¶„Éà
        env:
          GOOGLE_APPLICATION_CREDENTIALS: credentials/google_service_account.json
          REPLICATE_API_TOKEN: ${{ secrets.REPLICATE_API_TOKEN }}
        run: |
          echo "üöÄ Starting disapproval handler..."
          python3 production_disapproval_handler.py
          echo "‚úÖ Processing complete"
      
      - name: Upload logs if failed
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: error-logs
          path: |
            logs/
            *.log
          retention-days: 7