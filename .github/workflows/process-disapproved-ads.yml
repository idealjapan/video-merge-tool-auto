name: Process Disapproved Ads

on:
  # ÊâãÂãïÂÆüË°å
  workflow_dispatch:
  
  # „Çπ„Ç±„Ç∏„É•„Éº„É´ÂÆüË°å: 50ÂàÜ„Åî„Å®
  schedule:
    # ÊØéÊôÇ10ÂàÜ„Å®ÊØéÊôÇ00ÂàÜ„Å´ÂÆüË°åÔºà50ÂàÜÈñìÈöî„ÇíËøë‰ººÔºâ
    # UTCÊôÇÈñì„ÅßË®≠ÂÆöÔºàÊó•Êú¨ÊôÇÈñì„ÅØ+9ÊôÇÈñìÔºâ
    - cron: '0,50 * * * *'  # UTCÊôÇÈñì„ÅßÊØéÊôÇ0ÂàÜ„Å®50ÂàÜ„Å´ÂÆüË°å

jobs:
  process:
    runs-on: ubuntu-latest
    timeout-minutes: 30  # ÂÖ®‰Ωì„ÅÆ„Çø„Ç§„É†„Ç¢„Ç¶„ÉàÔºàÈÄöÂ∏∏3ÂàÜ„ÅßÂÆå‰∫ÜÔºâ
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
          # ffmpeg„Å®Êó•Êú¨Ë™û„Éï„Ç©„É≥„Éà„ÅÆ„Ç§„É≥„Çπ„Éà„Éº„É´
          sudo apt-get update
          sudo apt-get install -y ffmpeg fonts-noto-cjk fonts-noto fontconfig
          
          # „Éï„Ç©„É≥„Éà„Ç≠„É£„ÉÉ„Ç∑„É•„ÇíÊõ¥Êñ∞
          fc-cache -fv
          
          # „Éï„Ç©„É≥„Éà„ÅÆÁ¢∫Ë™ç„Å®„Éë„ÇπÊ§úË®º
          echo "Checking installed fonts..."
          fc-list | grep -i noto | head -5
          
          # ÂÆüÈöõ„ÅÆ„Éï„Ç©„É≥„Éà„Éï„Ç°„Ç§„É´„Éë„Çπ„ÇíÁ¢∫Ë™ç
          echo "Verifying font file paths..."
          ls -la /usr/share/fonts/opentype/noto/ 2>/dev/null || echo "opentype/noto not found"
          ls -la /usr/share/fonts/truetype/noto/ 2>/dev/null || echo "truetype/noto not found"
          
          # „Å©„Åì„Å´„Ç§„É≥„Çπ„Éà„Éº„É´„Åï„Çå„Åü„ÅãÁ¢∫Ë™ç
          dpkg -L fonts-noto-cjk | grep -E "\.(ttc|otf|ttf)$" | head -5
      
      - name: Create credentials directory
        run: mkdir -p credentials
      
      - name: Setup Google Service Account
        run: |
          echo '${{ secrets.GOOGLE_SERVICE_ACCOUNT_JSON }}' > credentials/google_service_account.json
      
      - name: Setup YouTube tokens
        run: |
          echo "${{ secrets.TOKEN_NB_PICKLE }}" | base64 -d > credentials/token_NB.pickle
          echo "${{ secrets.TOKEN_OM_PICKLE }}" | base64 -d > credentials/token_OM.pickle
          echo "${{ secrets.TOKEN_SBC_PICKLE }}" | base64 -d > credentials/token_SBC.pickle
      
      - name: Setup client secrets
        run: |
          echo '${{ secrets.CLIENT_SECRETS_JSON }}' > credentials/client_secrets.json
      
      - name: Validate JSON files
        run: |
          echo "Validating google_service_account.json..."
          python3 -c "import json; json.load(open('credentials/google_service_account.json'))" && echo "‚úÖ Valid JSON" || echo "‚ùå Invalid JSON"
          echo "Validating client_secrets.json..."
          python3 -c "import json; json.load(open('credentials/client_secrets.json'))" && echo "‚úÖ Valid JSON" || echo "‚ùå Invalid JSON"
      
      - name: Create output directories
        run: |
          mkdir -p ad-videos
          mkdir -p outputs
          mkdir -p logs
      
      - name: Process disapproved ads
        timeout-minutes: 15  # ÂÄãÂà•„Çπ„ÉÜ„ÉÉ„Éó„ÅÆ„Çø„Ç§„É†„Ç¢„Ç¶„Éà
        env:
          GOOGLE_APPLICATION_CREDENTIALS: credentials/google_service_account.json
          REPLICATE_API_TOKEN: ${{ secrets.REPLICATE_API_TOKEN }}
        run: |
          echo "üöÄ Starting disapproval handler..."
          python3 production_disapproval_handler.py
          echo "‚úÖ Processing complete"
      
      - name: Upload logs if failed
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: error-logs
          path: |
            logs/
            *.log
          retention-days: 7